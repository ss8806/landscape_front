import AppLayout from "../../components/Layouts/AppLayout";
import { useEffect, useRef, useState, Suspense, lazy } from "react";
import axios from "../../lib/axios";
import type { Category } from "../../types/Category";
import { useAuth } from "../../hooks/auth";
import { useForm, SubmitHandler } from "react-hook-form";
import { yupResolver } from "@hookform/resolvers/yup";
import * as yup from "yup";
import { toast } from "react-toastify";
import { useLocation, useNavigate } from "react-router-dom";
import AleartDialog from "../../components/AlertDialog";
import useSWR from "swr";

type State = {
  a_id: number;
};
const schema = yup.object().shape({
  title: yup.string().max(24),
  category_id: yup.number(),
  body: yup.string().max(24),
});

const EditArticles = () => {
  const { user } = useAuth({ middleware: "auth" });
  const Lazy = lazy(() => import("../../components/Lazy"));
  const navigation = useNavigate();
  const [loading, setLoading] = useState(false);
  // const [error, setError] = useState(false);
  const awspath = "https://backend0622.s3.ap-northeast-1.amazonaws.com/";
  const location = useLocation();
  const { a_id } = location.state as State;
  // const [article, setArticle] = useState<any>([
  //   {
  //     id: 0,
  //     title: "",
  //     body: "",
  //     user_id: 0,
  //     category_id: "",
  //     pic1: "",
  //   },
  // ]);
  const [c_name, setCname] = useState<any>([
    {
      id: 0,
      name: "",
    },
  ]);

  const fetcher = () =>
    axios
      .get("http://localhost:/api/article/" + a_id + "/edit")
      .then((res) => {
        return res.data;
      })
      .catch((error) => {
        console.log(error);
      });
  const { data, error }: any = useSWR(
    "http://localhost:/api/article/" + a_id + "/edit",
    fetcher
  );

  if (error) return <div>failed to load</div>;
  if (!data) return <div>loading......</div>;
  console.log(data);

  // useEffect(() => {
  //   (async () => {
  //     await axios
  //       .get("http://localhost:/api/article/" + a_id + "/edit")
  //       .then((response) => {
  //         setArticle(response.data);
  //         console.log(response.data);
  //       })
  //       .catch((error) => {
  //         setError(true);
  //         console.log(error);
  //       })
  //       .finally(() => {
  //         setLoading(false);
  //       });
  //   })();
  //   (async () => {
  //     await axios
  //       .get("http://localhost:/api/article/" + a_id + "/c_name")
  //       .then((response) => {
  //         setCname(response.data);
  //         console.log(response.data);
  //       })
  //       .catch((error) => {
  //         setError(true);
  //         console.log(error);
  //       })
  //       .finally(() => {
  //         setLoading(false);
  //       });
  //   })();
  //   (async () => {
  //     await axios
  //       .get("http://localhost:/api/article/create/")
  //       .then((response) => {
  //         setCategories(response.data);
  //         console.log(response.data);
  //       })
  //       .catch((error) => {
  //         setError(true);
  //         console.log(error);
  //       })
  //       .finally(() => {
  //         setLoading(false);
  //       });
  //   })();
  // }, []);

  const imageHander = (event: any) => {
    if (event.target.files === null) {
      return;
    }
    const file = event.target.files[0];
    if (file === null) {
      return;
    }
    let imgTag = document.getElementById("preview") as HTMLImageElement;
    const reader = new FileReader();
    reader.readAsDataURL(file);
    reader.onload = () => {
      const result: string = reader.result as string;
      imgTag.src = result;
    };
  };

  const onSubmit = (data: any) => {
    console.log(data);
    axios
      .put("http://localhost:/api/article/" + a_id + "/update", data)
      .then((response) => {
        console.log(response.data);
        navigation("/mypage");
        toast.success("登録に成功しました。");
      })
      .catch((error) => {
        console.log(error.data);
        toast.error("登録に失敗しました");
      });
  };

  const onDelete = () => {
    axios
      .delete("http://localhost:/api/article/" + a_id + "/delete")
      .then((response) => {
        navigation("/mypage");
        toast.success("削除に成功しました。");
      })
      .catch((error) => {
        toast.error("削除に失敗しました");
      });
  };

  return (
    <AppLayout>
      <section className="min-h-screen bg-yellow-400 py-20">
        <label htmlFor="inputTitle">タイトル {data[0][0].title}</label>
        <input
          // name="name"
          id="inputTitle"
          type="text"
          className="w-3/4 mt-1 mb-1 block mx-auto pl-2"
          placeholder="タイトル"
          // required
        />
      </section>
    </AppLayout>
  );
};
export default EditArticles;
